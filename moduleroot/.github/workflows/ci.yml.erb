name: CI

on:
  pull_request:
  schedule:
    - cron: '4 4 * * *'

jobs:
  setup_matrix:
    if: github.event_name != 'schedule' || github.repository_owner == '<%= @configs[:namespace] %>'
    name: 'Setup Test Matrix'
    runs-on: ubuntu-latest
    outputs:
      beaker_setfiles: ${{ steps.get_outputs.outputs.beaker_setfiles }}
      puppet_major_versions: ${{ steps.get_outputs.outputs.puppet_major_versions }}
      puppet_unit_test_matrix: ${{ steps.get_outputs.outputs.puppet_unit_test_matrix }}
    env:
      BUNDLE_WITHOUT: development:release
    steps:
      - uses: actions/checkout@v2
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true
      - name: Run rake check
        run: bundle exec rake check
      - name: Run rake validate
        run: bundle exec rake validate
      - name: Run rake lint
        run: bundle exec rake lint
      - name: Run rake validate
        run: bundle exec rake rubocop
      - name: Setup Test Matrix
        id: get_outputs
        run: bundle exec metadata2gha --use-fqdn --pidfile-workaround <%= @configs['pidfile_workaround'] %>

  unit:
    needs: setup_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.setup_matrix.outputs.puppet_unit_test_matrix)}}
    env:
      BUNDLE_WITHOUT: development:system_tests:release
      PUPPET_VERSION: "${{ matrix.puppet }}.0"
    name: Unit / Puppet ${{ matrix.puppet }} (Ruby ${{ matrix.ruby }})
    steps:
      - uses: actions/checkout@v2
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake parallel_spec
<%- if Dir[File.join(@metadata[:workdir], 'spec', 'acceptance', '**', '*_spec.rb')].any? -%>

  acceptance:
    needs: setup_matrix
    runs-on: ubuntu-latest
    env:
      BUNDLE_WITHOUT: development:test:release
    strategy:
      fail-fast: false
      matrix:
        setfile: ${{fromJson(needs.setup_matrix.outputs.beaker_setfiles)}}
        puppet: ${{fromJson(needs.setup_matrix.outputs.puppet_major_versions)}}
        <%- @configs['beaker_fact_matrix'].each do |option, values| -%>
        <%= option %>:
        <%- values.each do |value| -%>
          - "<%= value %>"
        <%- end -%>
        <%- end -%>
        <%- if @configs['excludes'].any? -%>
        exclude:
        <%- @configs['excludes'].each do |exclude| -%>
        <%- exclude.each do |key, value| -%>
          <%= key == exclude.first.first ? '-' : ' ' %> <%= key %>: "<%= value %>"
        <%- end -%>
        <%- end -%>
        <%- end -%>
    <%-
      name = ['Acceptance / ${{ matrix.puppet.name }}', '${{ matrix.setfile.name }}']
      @configs['beaker_fact_matrix'].each_key do |option|
        name << "#{option.tr('_', ' ').capitalize} ${{ matrix.#{option} }}"
      end
    -%>
    name: <%= name.join(' - ') %>
    steps:
      - uses: actions/checkout@v2
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake beaker
        env:
          BEAKER_PUPPET_COLLECTION: ${{ matrix.puppet.collection }}
          BEAKER_setfile: ${{ matrix.setfile.value }}
          <%- @configs['beaker_fact_matrix'].keys.each do |fact| -%>
          BEAKER_FACTER_<%= fact.upcase %>: ${{ matrix.<%= fact %> }}
          <%- end -%>
<%- end -%>
